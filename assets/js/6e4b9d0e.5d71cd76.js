"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[308],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return g}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),g=a,d=u["".concat(s,".").concat(g)]||u[g]||m[g]||o;return t?n.createElement(d,i(i({ref:r},p),{},{components:t})):n.createElement(d,i({ref:r},p))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4693:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],c={sidebar_label:"Program State",sidebar_position:2},s="Gear program state",l={unversionedId:"developing-contracts/gear-program",id:"developing-contracts/gear-program",title:"Gear program state",description:"The program is the main unit of the Gear component. Program code is stored as an immutable Wasm blob. Each program has a fixed amount of memory which persists between messagehandling (so-called static area).",source:"@site/docs/developing-contracts/gear-program.md",sourceDirName:"developing-contracts",slug:"/developing-contracts/gear-program",permalink:"/developing-contracts/gear-program",editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/developing-contracts/gear-program.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Program State",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Cargo-program Utility",permalink:"/developing-contracts/cargo-program"},next:{title:"Message Format",permalink:"/developing-contracts/messaging"}},p=[],m={toc:p};function u(e){var r=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gear-program-state"},"Gear program state"),(0,o.kt)("p",null,"The program is the main unit of the Gear component. Program code is stored as an immutable Wasm blob. Each program has a fixed amount of memory which persists between messagehandling (so-called static area)."),(0,o.kt)("p",null,"The minimum structure of the Gear program is this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'#![no_std]\n\nuse gstd::msg;\n\n#[no_mangle]\npub unsafe extern "C" fn handle() {\n    msg::reply(b"Hello world!", 0, 0);\n}\n\n#[no_mangle]\npub unsafe extern "C" fn init() {}\n\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"init()")," function is called only once during program initialization. And handles the incoming ",(0,o.kt)("inlineCode",{parentName:"p"},"init payload")," if there is one."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"handle()")," function will be called every time the program receives an incoming message. In this case, the ",(0,o.kt)("inlineCode",{parentName:"p"},"payload")," will be processed."))}u.isMDXComponent=!0}}]);