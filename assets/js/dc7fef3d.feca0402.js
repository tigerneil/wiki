"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[333],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(f,o(o({ref:t},l),{},{components:r})):n.createElement(f,o({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1052:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],s={sidebar_label:"IDEA Overview",sidebar_position:1},c="Gear IDEA online",p={unversionedId:"idea/idea-overview",id:"idea/idea-overview",title:"Gear IDEA online",description:"Gear IDEA is a convenient tool that\u2019s purpose is to familiarize users with the Gear platform. It provides smart-contract developers with the easiest and fastest way to write, compile, test and upload smart-contracts to a test network directly in their browser without additional configuration.",source:"@site/docs/idea/idea-overview.md",sourceDirName:"idea",slug:"/idea/idea-overview",permalink:"/idea/idea-overview",editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/idea/idea-overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"IDEA Overview",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/getting-started-in-5-minutes"},next:{title:"Online IDE",permalink:"/idea/online-ide"}},l=[],u={toc:l};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gear-idea-online"},"Gear IDEA online"),(0,i.kt)("p",null,"Gear IDEA is a convenient tool that\u2019s purpose is to familiarize users with the Gear platform. It provides smart-contract developers with the easiest and fastest way to write, compile, test and upload smart-contracts to a test network directly in their browser without additional configuration. "),(0,i.kt)("p",null,"This is the demo application that implements all of the possibilities of interaction with smart-contracts in Gear, that also manages accounts, balances, events and more."),(0,i.kt)("p",null,"You can start experimenting right now on ",(0,i.kt)("a",{parentName:"p",href:"https://idea.gear-tech.io/"},"https://idea.gear-tech.io/"),"."),(0,i.kt)("h1",{id:"idea-components-and-microservices"},"IDEA components and microservices"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/master/website/frontend"},"frontend")),(0,i.kt)("p",null,"React application that provides user interface for working with smart-contracts on Gear IDEA."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/master/website/events-listener"},"events-listener")),(0,i.kt)("p",null,"Microservice listens to all the events occuring in the Gear node and sends to the data-storage to store the information about them."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/master/website/data-storage"},"data-storage")),(0,i.kt)("p",null,"Microservice responsible for storing metadata of uploaded programs and information about events."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/master/website/api-gateway"},"api-gateway")),(0,i.kt)("p",null,"Microservice provides any interaction between the events / meta data store and an external user."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/master/website/test-balance"},"test-balance")),(0,i.kt)("p",null,"Microservice provides the opportunity to obtain test tokens."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear-js/tree/master/website/wasm-compiler"},"wasm-compiler")),(0,i.kt)("p",null,"Microservice provides the opportunity to compile Rust projects to WASM."))}d.isMDXComponent=!0}}]);