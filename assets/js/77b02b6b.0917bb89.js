"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[4921],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(t),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return t?a.createElement(f,i(i({ref:n},p),{},{components:t})):a.createElement(f,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6801:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),i=["components"],c={sidebar_position:1,sidebar_label:"Connect"},s="Connect API",l={unversionedId:"api/connect",id:"api/connect",title:"Connect API",description:"The API allows us to interact with the chain and make queries via Javascript. The basic API is implemented on the Substrate layer and is the same for all substrate-based networks.",source:"@site/docs/api/connect.md",sourceDirName:"api",slug:"/api/connect",permalink:"/api/connect",editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/api/connect.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Connect"},sidebar:"tutorialSidebar",previous:{title:"Tools",permalink:"/tools/"},next:{title:"CLI",permalink:"/api/cli"}},p=[{value:"Installation",id:"installation",children:[],level:2},{value:"Getting started",id:"getting-started",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],u={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connect-api"},"Connect API"),(0,o.kt)("p",null,"The API allows us to interact with the chain and make queries via Javascript. The basic API is implemented on the Substrate layer and is the same for all substrate-based networks."),(0,o.kt)("p",null,"Complete API overview and cookbook is on ",(0,o.kt)("a",{parentName:"p",href:"https://polkadot.js.org/docs/"},"Polkadot documentation portal"),"."),(0,o.kt)("p",null,"Below are a few entry points for interact with Gear:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"ws://127.0.0.1:9944")),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npm install @gear-js/api\n")),(0,o.kt)("p",null,"or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add @gear-js/api\n")),(0,o.kt)("h2",{id:"getting-started"},"Getting started"),(0,o.kt)("p",null,"Start an API connection to a running node on localhost"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { GearApi } from '@gear-js/api';\n\nconst gearApi = await GearApi.create();\n")),(0,o.kt)("p",null,"You can also connect to a different node"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const gearApi = await GearApi.create({\n  providerAddress: 'wss://someIP:somePort',\n});\n")),(0,o.kt)("p",null,"Getting node info"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const chain = await gearApi.chain();\nconst nodeName = await gearApi.nodeName();\nconst version = await gearApi.version();\nconst genesis = gearApi.genesisHash.toHex();\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"This simple example describes how to subscribe to a new blocks and get chain spec:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"async function connect() {\n  const gearApi = await GearApi.create();\n\n  const [chain, nodeName, version] = await Promise.all([\n    gearApi.chain(),\n    gearApi.nodeName(),\n    gearApi.version(),\n  ]);\n  console.log(\n    `You are connected to chain ${chain} using ${nodeName} v${version}`,\n  );\n\n  const unsub = await gearApi.gearEvents.subscribeNewBlocks((header) => {\n    console.log(\n      `New block with number: ${header.number.toNumber()} and hash: ${header.hash.toHex()}`,\n    );\n  });\n}\nconnect().catch(console.error);\n")))}d.isMDXComponent=!0}}]);